// <auto-generated />
using System;
using APCM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APCM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240812140654_Updated Bugs3")]
    partial class UpdatedBugs3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APCM.Models.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomBool1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomBool1Val")
                        .HasColumnType("bit");

                    b.Property<string>("CustomBool2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomBool2Val")
                        .HasColumnType("bit");

                    b.Property<string>("CustomBool3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomBool3Val")
                        .HasColumnType("bit");

                    b.Property<int>("CustomBoolCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CustomDate1Val")
                        .HasColumnType("date");

                    b.Property<string>("CustomDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CustomDate2Val")
                        .HasColumnType("date");

                    b.Property<string>("CustomDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CustomDate3Val")
                        .HasColumnType("date");

                    b.Property<int>("CustomDateCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomInt1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomInt1Val")
                        .HasColumnType("int");

                    b.Property<string>("CustomInt2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomInt2Val")
                        .HasColumnType("int");

                    b.Property<string>("CustomInt3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomInt3Val")
                        .HasColumnType("int");

                    b.Property<int>("CustomIntCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomMultilineText1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMultilineText1Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMultilineText2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMultilineText2Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMultilineText3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMultilineText3Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomMultilineTextCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomString1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomString1Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomString2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomString2Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomString3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomString3Val")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomStringCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("APCM.Models.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("APCM.Models.Entities.HashTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hashTags");
                });

            modelBuilder.Entity("APCM.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("APCM.Models.Entities.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("APCM.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HashTagItem", b =>
                {
                    b.Property<int>("HashTagsId")
                        .HasColumnType("int");

                    b.Property<int>("itemsId")
                        .HasColumnType("int");

                    b.HasKey("HashTagsId", "itemsId");

                    b.HasIndex("itemsId");

                    b.ToTable("HashTagItem");
                });

            modelBuilder.Entity("APCM.Models.Entities.Item", b =>
                {
                    b.HasOne("APCM.Models.Entities.Collection", null)
                        .WithMany("Items")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HashTagItem", b =>
                {
                    b.HasOne("APCM.Models.Entities.HashTag", null)
                        .WithMany()
                        .HasForeignKey("HashTagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APCM.Models.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("itemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APCM.Models.Entities.Collection", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
